:root {
  --node_border_radius: 5px;
}

.react-flow__node {
  padding: 0;
  border-radius: var(--node_border_radius);
  background-color: #09dbd8;
  display: flex;
  flex-direction: column;
  color: aliceblue;
  box-sizing: content-box;
  transform: (-50%, -50%);
  border: 2px solid #ffffff00;
  font-size: 0.5rem;
  &.selected {
    border-color: #ffffff99;
  }
  background-clip: content-box;

  & * {
    box-sizing: border-box;
  }
}

.innernode {
  width: 100%;
  height: 100%;
  flex-direction: column;
  display: flex;
  // padding: 2px;
  box-sizing: border-box;

  &.intrigger {
    & .nodeheader {
      background-color: #abb408;
    }
  }
}
.nodeheader {
  box-sizing: border-box;
  background-color: #08b439;
  width: 100%;
  padding: 0.1rem;
  border-radius: var(--node_border_radius) var(--node_border_radius) 0 0;
  display: flex; /* Use flex layout */
  align-items: center; /* Align items vertically in the center */
  justify-content: space-between; /* Distribute space between items */

  &_element {
    display: flex; /* Enable flex within each child to center content */
    align-items: center; /* Align items vertically in the center */
  }
  &_title {
    flex-grow: 1; /* Allow the text div to grow and fill available space */
    margin: 0 10px; /* Add some space around the text for aesthetics */
    white-space: nowrap; /* Prevent wrapping */
    overflow: hidden; /* Hide overflow */
    text-overflow: ellipsis; /* Add ellipsis to overflow */
    justify-content: center; /* Center the text horizontally */
    &_text {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      max-width: 100%; /* Ensure it does not overflow the parent */
    }
  }
}

.nodename_input {
  // remove the default
  border: 1px solid #000000;
  border-radius: 2px;
  background: none;
  color: white;
  text-align: center;

  font-size: inherit;
  margin: 2px;
  box-sizing: border-box;
}

.nodefooter {
  background-color: #4e0ba5;
  width: 100%;
  padding: 0.1rem;
  border-radius: 0 0 var(--node_border_radius) var(--node_border_radius);
}

.nodebody {
  flex-grow: 1;
  background-color: rgb(0, 109, 205);
}

.nodedatabody {
  overflow: hidden;
}

.noderesizecontrol {
  background: transparent !important;
  border: none !important;
  font-size: 0.5rem;
}
.noderesizeicon {
  position: absolute;
  bottom: 4px;
  right: 4px;
  font-size: 0.5rem;
}

.nodeio {
  width: 100%;
  background-color: #ff0000;
  padding: 0.1rem;
  margin-top: 0.1rem;
  margin-bottom: 0.1rem;
  position: relative;
  display: flex;
  flex-direction: row;
}

.nodeinput {
  @extend .nodeio;
}

.nodeoutput {
  @extend .nodeio;
}

.iovaluefield {
  flex-grow: 1;
  flex-shrink: 1;
  overflow: hidden;
  align-items: start;
  justify-content: start;
  display: flex;
  margin: 0.2rem;
  & > input {
    width: 100%;
  }
}
.ioname {
  flex-grow: 1;
  flex-shrink: 1;
  color: blue;
  margin: 0.2rem;
  overflow: hidden;
  min-width: 2rem;

  .nodeinput & {
    text-align: left;
  }
  .nodeoutput & {
    text-align: right;
  }
}
